theory Minimal_Crypto_API begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, sdec/2, senc/2, snd/1
equations:
    fst(<x.1, x.2>) = x.1,
    sdec(senc(x.1, x.2), x.2) = x.1,
    snd(<x.1, x.2>) = x.2





rule (modulo E) NewKey:
   [ Fr( ~h ), Fr( ~k ) ]
  --[ NewKey( ~h, ~k ) ]->
   [ !Store( ~h, ~k ), Out( ~h ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) EncryptMsg:
   [ !Store( h, k ), In( <h, m> ) ] --> [ Out( senc(m, k) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) WrapKey:
   [ !Store( h1, k1 ), !Store( h2, k2 ), In( <h1, h2> ) ]
  -->
   [ Out( senc(k1, k2) ) ]

  /* has exactly the trivial AC variant */

lemma NewKey_invariant [use_induction]:
  all-traces
  "¬(∃ #i #j h k. (NewKey( h, k ) @ #i) ∧ (!KU( k ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ #i #j h k. (NewKey( h, k ) @ #i) ∧ (!KU( k ) @ #j)"
*/
simplify
solve( !KU( ~k.1 ) @ #j )
  case WrapKey
  by sorry
qed

lemma NewKey_secrecy:
  all-traces "¬(∃ #i #j h k. (NewKey( h, k ) @ #i) ∧ (K( k ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ #i #j h k. (NewKey( h, k ) @ #i) ∧ (K( k ) @ #j)"
*/
simplify
solve( !KU( ~k.1 ) @ #vk )
  case WrapKey
  by sorry
qed











/* All wellformedness checks were successful. */

/*
Generated from:
Tamarin version 1.9.0
Maude version 3.3.1
Git revision: 89ac5bf6a2dc0b04941623411d20509ca7e6659b, branch: cyclic
Compiled at: 2023-09-05 13:52:28.344466 UTC
*/

end