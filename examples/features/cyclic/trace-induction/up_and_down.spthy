theory UpAndDown
begin

functions: h/1

rule Start:
  [ Fr(~x) ]
  --[ Gen(~x) ]->
  [ Up(~x, ~x) ]

rule Up:
  [ Up(id, x) ]
  --[ Gen(h(x)) ]->
  [ Up(id, h(x)) ]

rule DownStart:
  [ Up(idUp, x), Fr(~idDown) ]
  --[ Destr(x) ]->
  [ Down(~idDown, x) ]

rule Down:
  [ Down(id, h(x)) ]
  --[ Destr(x) ]->
  [ Down(id, x) ]

rule DownEnd:
    // Note: If we replace x with ~x, the lemma would also not be provable after
    // searching for backlinks under substitutions.
  [ Down(id, x) ]
  --[ End(x) ]->
  []

lemma CorrectnessInvariant[use_induction,reuse]:
  "All x #a. Destr(x) @ #a ==> Ex #b. Gen(x) @ #b"

lemma CorrectnessEnd:
  "All x #a. End(x) @ #a ==> Ex #b. Gen(x) @ #b"

lemma GenUnique[reuse,use_induction]:
  "All x #a #b. Gen(x) @ #a & Gen(x) @ #b ==> #a = #b"

lemma Correspondence[use_induction]:
  "All x #a #b. Destr(x) @ #a & Destr(x) @ #b ==> #a = #b"

end
